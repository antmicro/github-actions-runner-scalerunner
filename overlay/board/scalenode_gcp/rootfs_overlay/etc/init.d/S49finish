#!/bin/sh

monitor_keys() {
    echo "Monitoring ssh keys for $1"
    wait=0
    while [ true ] ; do
        TMP=`mktemp`
        touch /home/scalerunner/.ssh/authorized_keys_$1
        if [ $wait -eq 1 ]; then
            wait_str="?wait_for_change=true"
        fi
        curl --silent "http://169.254.169.254/computeMetadata/v1/$1/attributes/ssh-keys${wait_str}" -H 'Metadata-Flavor: Google' > $TMP
        cat $TMP | grep ^scalerunner: | cut -f 2- -d ':' > /home/scalerunner/.ssh/authorized_keys_$1
        rm $TMP

        cat /home/scalerunner/.ssh/authorized_keys_$1 > /home/scalerunner/.ssh/authorized_keys

        chown -R scalerunner:scalerunner /home/scalerunner/.ssh

        echo "New keys insterted"
        wait=1
        sleep 1
    done
}

monitor_singularity() {
    SCALE=$(curl --silent "http://169.254.169.254/computeMetadata/v1/instance/attributes/SCALE" -H "Metadata-Flavor: Google")
    # check if SCALE is a number
    isnumber_re='^[0-9]+$'
    if ! [[ $SCALE =~ $isnumber_re ]] ; then
        echo "Error: SCALE is not a number! Not starting singularity contaner, please check VM metadata!"
        exit 1
    fi
    if ! mountpoint -q /mnt/persistent; then
        echo "Error: persistent disk not mounted, but it is required! Not starting singularity container!"
        exit 1
    fi
    SINGULARITY_CMD="singularity instance start -C -e --overlay /mnt/persistent/"
    # if log disk is mounted, bind it into container
    if mountpoint -q /mnt/log; then
        # TODO: make sure same user exist in scalerunner,
        # that exists in the container
        # set chown of logs to the runner:runner user in the container
        chown 1000:1001 /mnt/log
        SINGULARITY_CMD="${SINGULARITY_CMD} --bind /mnt/log:/var/log/runner"
    fi
    SINGULARITY_INSTANCE_NAME="runner"
    SINGULARITY_CMD="${SINGULARITY_CMD} /mnt/sif/image.sif ${SINGULARITY_INSTANCE_NAME} $SCALE"
    while [ true ] ; do
       APP_RUNNING=`singularity instance list  | grep ${SINGULARITY_INSTANCE_NAME} | wc -l`
       if [ $APP_RUNNING = "0" ] ; then
	   ${SINGULARITY_CMD}
       fi
       sleep 10
    done
}


start() {
    mkdir -p /etc/sudoers.d
    echo "scalerunner ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/scalerunner

    # wait a bit until dhcp gets ip
    TIMEOUT=0
    while [ true ] ; do
        END=`route -n | grep ^0.0.0.0 | tail -1 | wc -l`
        if [ "$END" = "1" ] ; then
           break
        else
           TIMEOUT=`expr $TIMEOUT + 1`
        fi
        if [ "$TIMEOUT" = "5" ] ; then
           break
        fi
        sleep 1
    done

    GCP=`dmesg | grep "Google Compute Engine" | grep "BIOS Google" | wc -l`

    echo "Detecting if we're running in GCP..."

    /usr/local/bin/prepare_disk.sh

    if [ "$GCP" = "1" ] ; then
        echo "GCP detected"

        new_hostname=`curl --silent 'http://169.254.169.254/computeMetadata/v1/instance/hostname' -H 'Metadata-Flavor: Google' --max-time 5 --retry 10 --retry-all-errors | cut -f 1 -d '.'`
        echo "Setting hostname to ${new_hostname}"
        sed -i "s#$(hostname)#${new_hostname}#g" /etc/hosts
        hostname "$new_hostname"
        monitor_keys "instance" &
        if [ -f /mnt/sif/image.sif ]; then
            monitor_singularity &
        fi
    fi

    return 0
}

stop() {
    return 0
}

restart() {
    return 0
}

case "$1" in
  start|stop|restart)
         "$1";;
  reload)
         restart;;
  *)
         echo "Usage: $0 {start|stop|restart|reload}"
	 exit 1
esac
